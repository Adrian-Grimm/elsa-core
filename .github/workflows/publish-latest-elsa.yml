name: Build and Publish Elsa Packages
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [published]

env:
  NODE_OPTIONS: --max-old-space-size=4096
  ELSA_VERSION: 2.11.0

jobs:
  build_and_pack:
    name: Build and Pack Elsa
    runs-on: ubuntu-latest
    
    steps:

      - name: Set preview VERSION variable
        run: echo "VERSION=$ELSA_VERSION-preview.${{ github.run_number }}" >> $GITHUB_ENV
        if: ${{ github.event_name != 'release' }}

      - name: Set release VERSION variable
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
        if: ${{ github.event_name == 'release' }}

      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18.12.1
      
      - run: echo $VERSION
      - run: node --version
      - run: npm --version

      - name: Build Designer
        working-directory: ./src/designer/elsa-workflows-studio
        run: |
          npm install --force
          npm version $VERSION --allow-same-version
          npm run build

      - name: Pack Designer
        working-directory: ./src/designer/elsa-workflows-studio
        run: npm pack
        if: ${{ github.event_name == 'release' || github.event_name == 'push'}}

      - name: Upload Designer Artifact
        uses: actions/upload-artifact@v3
        with:
          name: designer-npm-package
          path: src/designer/elsa-workflows-studio/elsa-*.tgz
        if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
      
      - name: Build Bindings
        working-directory: ./src/designer/bindings/aspnet/Elsa.Designer.Components.Web
        run: |
          npm install --force
          npm install -g webpack
          npm install -g webpack-cli
          npm run build
      
      - name: Build Elsa
        run: dotnet build --configuration Release /p:Version=$VERSION

      # - name: Run Tests
      #   run: dotnet test --configuration Release --no-build

      - name: Pack Elsa
        run: dotnet pack --configuration Release /p:Version=$VERSION -o out
        if: ${{ github.event_name == 'release' || github.event_name == 'push'}}

      - name: Upload Elsa Artifact
        uses: actions/upload-artifact@v3
        with:
          name: elsa-nuget-package
          path: out/*nupkg
        if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
      
  publish_npm_myget:
    name: Publish to MyGet npm
    needs: build_and_pack
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
    steps:
      - name: Download NPM Package
        uses: actions/download-artifact@v3
        with:
          name: designer-npm-package

      - uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          registry-url: 'https://www.myget.org/F/elsa-2-npm/npm/'

      - run: npm publish *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MYGET_ELSA_2_NPM }}

  publish_nuget_myget:
    name: Publish to MyGet Nuget
    needs: build_and_pack
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
    steps:
      - name: Download Nuget Packages
        uses: actions/download-artifact@v3
        with:
          name: elsa-nuget-package
      
      - name: Publish Nuget Packages to MyGet
        run: dotnet nuget push *nupkg -k ${{ secrets.MYGET_ELSA_2 }} -s https://www.myget.org/F/elsa-2/api/v3/index.json
